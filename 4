USE dbnamehere;
GO

CREATE PROCEDURE dbo.GenerateGrantRevokeStatements
    @Role NVARCHAR(50)
AS
BEGIN
    SET NOCOUNT ON;

    -- Get the name of the database where this procedure was called from
    DECLARE @currentDBName NVARCHAR(128);
    SET @currentDBName = DB_NAME();

    -- Create temporary table to store the statements
    CREATE TABLE #Statements (
        StatementType NVARCHAR(10),
        SQLStatement NVARCHAR(MAX)
    );

    -- Dynamic SQL to generate statements based on the specified role
    DECLARE @sql NVARCHAR(MAX);

    IF @Role = 'db_owner'
    BEGIN
        SET @sql = '
        USE ' + QUOTENAME(@currentDBName) + ';

        -- Insert GRANT and REVOKE statements for db_owner role
        INSERT INTO #Statements (StatementType, SQLStatement)
        SELECT 
            ''GRANT'' AS StatementType,
            ''GRANT db_owner TO ['' + dp.name + ''];'' AS SQLStatement
        FROM sys.database_role_members drm
        JOIN sys.database_principals dp ON drm.member_principal_id = dp.principal_id
        JOIN sys.database_principals rp ON drm.role_principal_id = rp.principal_id
        WHERE rp.name = ''db_owner'';

        INSERT INTO #Statements (StatementType, SQLStatement)
        SELECT 
            ''REVOKE'' AS StatementType,
            ''REVOKE db_owner FROM ['' + dp.name + ''];'' AS SQLStatement
        FROM sys.database_role_members drm
        JOIN sys.database_principals dp ON drm.member_principal_id = dp.principal_id
        JOIN sys.database_principals rp ON drm.role_principal_id = rp.principal_id
        WHERE rp.name = ''db_owner'';
        ';
    END
    ELSE IF @Role = 'sysadmin'
    BEGIN
        SET @sql = '
        USE ' + QUOTENAME(@currentDBName) + ';

        -- Insert GRANT and REVOKE statements for sysadmin role
        INSERT INTO #Statements (StatementType, SQLStatement)
        SELECT 
            ''GRANT'' AS StatementType,
            ''ALTER SERVER ROLE [sysadmin] ADD MEMBER ['' + sp.name + ''];'' AS SQLStatement
        FROM sys.server_role_members srm
        JOIN sys.server_principals sp ON srm.member_principal_id = sp.principal_id
        JOIN sys.server_principals srp ON srm.role_principal_id = srp.principal_id
        WHERE srp.name = ''sysadmin'';

        INSERT INTO #Statements (StatementType, SQLStatement)
        SELECT 
            ''REVOKE'' AS StatementType,
            ''ALTER SERVER ROLE [sysadmin] DROP MEMBER ['' + sp.name + ''];'' AS SQLStatement
        FROM sys.server_role_members srm
        JOIN sys.server_principals sp ON srm.member_principal_id = sp.principal_id
        JOIN sys.server_principals srp ON srm.role_principal_id = srp.principal_id
        WHERE srp.name = ''sysadmin'';
        ';
    END
    ELSE
    BEGIN
        PRINT 'Invalid role specified. Use ''db_owner'' or ''sysadmin''.';
        RETURN;
    END

    EXEC sp_executesql @sql;

    -- Output the statements in the desired order
    SELECT StatementType, SQLStatement
    FROM #Statements
    ORDER BY 
        CASE 
            WHEN StatementType = 'GRANT' THEN 1
            WHEN StatementType = 'REVOKE' THEN 2
        END,
        SQLStatement;

    -- Drop temporary table
    DROP TABLE #Statements;
END;
GO
